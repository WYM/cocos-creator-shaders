// 逐顶点漫反射光照
CCEffect %{
  techniques:
  - name: opaque
    passes:
    - vert: vert:vert
      frag: frag:frag
      properties: &props
        diffuse: { value: [1, 1, 1, 1], editor: { type: color } }
}%

CCProgram vert %{
  precision highp float;
  #include <decode-standard>
  #include <cc-global>
  #include <cc-local>

  out vec4 v_color;

  uniform Constant {
    vec4 diffuse;
  };

  vec4 vert () {
    StandardVertInput In;
    CCDecode(In);

    vec4 pos = cc_matWorld * In.position; // UnityObjectToClipPos

    vec3 ambient = cc_ambientGround.xyz;

    vec3 worldNormal = normalize((cc_matWorldIT * vec4(In.normal, 0.0)).xyz);
    vec3 worldLight = normalize(-cc_mainLitDir.xyz);
    vec3 diffuse = cc_mainLitColor.rgb * diffuse.rgb * saturate(dot(worldNormal, worldLight));
    
    v_color = vec4(diffuse + ambient, 1.0);
    return cc_matProj * (cc_matView * cc_matWorld) * pos;
  }
}%

CCProgram frag %{
  precision highp float;
  #include <output>

  in vec4 v_color;

  vec4 frag () {
    return CCFragOutput(v_color);
  }
}%
